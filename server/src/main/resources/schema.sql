drop table IF EXISTS users CASCADE;
drop table IF EXISTS items CASCADE;
drop table IF EXISTS booking CASCADE;
drop table IF EXISTS comments CASCADE;
drop table IF EXISTS requests CASCADE;

drop type IF EXISTS booking_status;



create table if not exists users (
  id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);


     create table if not exists requests (
   id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   description VARCHAR (1024) NOT NULL,
   requester_id INTEGER NOT NULL REFERENCES users (id),
   created TIMESTAMP NOT NULL,
   CONSTRAINT pk_requests PRIMARY KEY (id)
   );

    create table if not exists items (
  id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  user_owner INTEGER REFERENCES users (id),
  description VARCHAR(1024) NOT NULL,
  available BOOLEAN NOT NULL,
  request INTEGER,
  CONSTRAINT pk_item PRIMARY KEY (id),
  CONSTRAINT fk_item_request FOREIGN KEY (request) REFERENCES requests (id)
  );

   create table if not exists booking (
   id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   start_time TIMESTAMP NOT NULL,
   end_time TIMESTAMP NOT NULL,
   item_id INTEGER NOT NULL REFERENCES items (id) ,
   booker_id INTEGER NOT NULL REFERENCES users (id) ,
   status VARCHAR NOT NULL,
   CONSTRAINT pk_booking PRIMARY KEY (id)
   );



  create table if not exists comments (
   id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   text VARCHAR (1024) NOT NULL,
   author_id INTEGER NOT NULL REFERENCES users (id),
   item_id INTEGER NOT NULL REFERENCES items (id),
   created TIMESTAMP NOT NULL,
   CONSTRAINT pk_comments PRIMARY KEY (id)
   );